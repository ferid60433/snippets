---
docstring: |
    ## meya.luis.yaml
    Uses third party NLU service Luis.ai, to determine the user's intent and trigger the flow if a matching intent is found.
    ### Properties
    | Property | Description | Required|
    |    ---   |     ---     |   ---   |
    `app_id`|Your Luis.ai app's ID.|*Required*
    `api_key`|Your Luis.ai app's API key.|*Required*
    `intent`|The name of the intent the user's input must match. If absent, any intent will match.|*Optional*
    `intent_regex`|A regular expression to use to match the incoming intent. Used for advanced intent matching. If set, this overrides the `intent` field.|*Optional*
    `min_confidence`|The minimum confidence that will trigger the intent. A value between `0.0` and `1.0`.|*Optional. Default: `0.67`*
    `max_confidence`|The maximum confidence that will trigger the intent. A value between `0.0` and `1.0`.|*Optional. Default: `1.0`*
    `subdomain`|The Luis.ai subdomain to use.|*Optional. Default: `westus`*
    ### NLU data returned from Luis.ai
    The following data are available on the `flow` scope.
    | Property | Description |
    |    ---   |     ---     |
    `_confidence`|The Luis.ai agent's confidence of the match.
    `_intent`|The intent the Luis.ai agent matched.
    `value`|The user's original text.
    `fulfillment.speech`|The Luis.ai agent's response if you've set fulfillment phrases within Luis.ai.
    `parameters.simplified`|A simplified version of the query sent to Luis.ai.
    `source`|The source Luis.ai app.

    Matched entities will be available on `flow` scope using the entity name and also as a list by appending `_list`. For example the uttrance, "I love apples, pears and bananas." would result in the following `flow` scope data.
        ```python
        {
            "intent": "fruits"
            "fruit": "apples",
            "fruit_list": ["apples", "pears", "bananas"]
        }
        ```
language: yaml
tags: []
expanded: false
