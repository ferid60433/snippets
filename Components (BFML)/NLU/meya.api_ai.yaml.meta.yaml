---
docstring: |
    ## meya.api_ai
    Accepts input from the user and matches it against a pre-trained Dialogflow agent. It also extracts entity data and makes that available on `flow` scope.
    ### Properties
    | Property | Description | Required |
    |   ----   |     ---     |   ----   |
    `text`|Text to display to the user. Can include Mustache syntax: `{{ flow.value }}`.|*Required*
    `speech`|Text to speak to the user. This field also accepts SSML markup to customize pronunciation.|*Optional. Defaults to value of `text` property*
    `client_access_token`|The Dialogflow client access token from your Dialogflow agent settings.|*Required*
    `language`|A two letter language code matching one of the Dialogflow agent's languages. For example, `en` for English. If omitted, the bot will auto-detect the user's language and set `flow.language` to the appropriate language code.|*Optional. Default: blank (i.e. auto-detect)*
    `require_match`|If `false`, the flow will return the `no_match` action, which you can use to transition to another state.|*Optional. Default: `true`*
    `min_confidence`|The minimum confidence required to match the entity.|*Optional. Default: `0.67`*
    `latch_up`|If `true`, any confidence value greater than `min_confidence` will be rounded up to `1.0`, thus winning any intent collisions.` Confidence values less than `min_confidence` will be rounded down to `0.0`.|`Optional. Default: `false`*
    `scope`|Where to store the data. One of `flow`, `user`, or `bot`.|*Optional. Default: `flow`*
    `buttons`|A YAML list of buttons.|*Optional*
    `cache_duration`|The number of seconds a request is cached. Set to 0 to force a new request. Note that shorter cache durations may increase latency in bot response since more API calls must be made.|*Optional. Default: `60`*
    **The user's intent will be available as `flow.intent`.**
    ### Transitions
    | Transition | Description | Required |
    |    ----    |     ---     |   ----   |
    `next`|If the input matches the Dialogflow agent's intent the `next` action is triggered. By default, this will trigger the next state. You can alter this by explicitly setting a transition for the `next` action in the `transitions` section.|*Optional*
    `no_match`|The state to transition to if `require_match` is `false` and the user's input does not match any of the Dialogflow agent's intents.|*Optional*
    **You must explicitly handle intents returned from Dialogflow, or your bot will not respond. For example, if the user's input matches a Dialogflow intent called `weather`, you must have a matching transition called `weather`.**
    ### Flow scope variables
    Dialogflow will set several variables on the `flow` scope related to the NLU intent matching process. They can be accessed from a flow using Mustache syntax: `{{ flow._intent }}`, or from a Python component using `self.db.flow.get("_intent")`.
    
    | Variable | Description |
    |   ---    |     ---     |
    `_confidence`|The Dialogflow agent's confidence in the match.
    `_intent`|The intent the Dialogflow agent matched.
    `value`|The user's original text.
    `fulfillment.speech`|The Dialogflow agent's response, if you've provided the app with responses.
    `parameters.simplified`|The query submitted to Dialogflow.
    `source`|The source Dialogflow agent.
    ### Example - Language Detection
    You can use the `meya.api_ai` component to detect a user's language. Start by creating a Dialogflow agent with both English and French language enabled. Then create a `greetings` intent in the agent with English and French training phrases, such as `hello` and `bonjour`. Finally, create a new flow called `language.yaml` and paste the following code.
    ```
    triggers:
        - type: meya.catchall
    states:
        first:
            component: meya.text
            properties:
                text: "Your language is {{ flow.language }}"

        api_ai_state:
            component: meya.api_ai
            properties:
                text: "Enter some text"
                client_access_token: <YOUR_CLIENT_ACCESS_TOKEN>
            transitions:
                greeting: greeting

        greeting:
            component: meya.text
            properties:
                text: "Your language is {{ flow.language }}"
    ```
    Test it out in the test chat window. Entering `hello` will match the `catchall` trigger and start the flow. The bot will say `Your language is` since it hasn't yet detected your language. Enter `hello` again and the bot will respond `Your language is en`. Clear the messages to start over. This time try entering `bonjour`. The bot will respond `Your language is fr`.
language: yaml
tags: []
expanded: false
