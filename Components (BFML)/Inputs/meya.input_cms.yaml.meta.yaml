---
docstring: |
    ## meya.input_cms
    Accepts input from the user and matches it against a Bot CMS-trained NLU agent. It also extracts entity data and makes that available on the `flow` scope. Buttons are also supported.

    ### Properties
    | Property | Description | Required |
    |   ----   |     ---     |   ----   |
    `text`|Text to display to the user. Can include Mustache syntax: `{{ flow.value }}`.|*Required*
    `speech`|Text to speak to the user. This field also accepts SSML markup to customize pronunciation.|*Optional. Defaults to value of `text` property*
    `space`|The space, or folder, in which the key is stored in Bot CMS.|*Required*
    `key`|The key, or intent, which will be returned as an action.|*Required*
    `language`|The two character language identifier. Example: `en`.|*Optional*
    `require_match`|If `false`, the flow will return the `no_match` action, which you can use to transition to another state.|*Optional. Default: `true`*
    `min_confidence`|The minimum confidence required to match the entity.|*Optional. Default: `0.67`*
    `detect_language`|If `true`, `{{ flow.language }}` will be set to the language the NLU agent detected from the user's input.|*Optional. Default: `false`*
    `scope`|Where to store the data. One of `flow`, `user`, or `bot`.|*Optional. Default: `flow`*
    `buttons`|An YAML list of buttons.|*Optional*
    `error_message`|The message displayed to the user if the input was not an audio file.|*Optional. Default: `Sorry, I don't understand. Try again.`*

    ### Transitions
    | Transition | Description | Required |
    |    ----    |     ---     |   ----   |
    `next`|If the input matches the agent's intent the `next` action is triggered. By default, this will trigger the next state. You can alter this by explicitly setting a transition for the `next` action in the `transitions` section.|*Optional*
    `no_match`|The state to transition to if `require_match` is `false` and the user's input does not match any of the agent's intents.|*Optional*

    **You must explicitly handle intents returned from Dialogflow, or your bot will not respond. For example, if the user's input matches a Dialogflow intent called `weather`, you must have a matching transition called `weather`.**

    ### Flow scope variables
    The `meya.input_cms` component will set several variables on the `flow` scope related to the NLU intent matching process. They can be accessed from a flow using Mustache syntax: `{{ flow._intent }}`, or from a Python component using `self.db.flow.get("_intent")`.
    
    | Variable | Description |
    |   ---    |     ---     |
    `_confidence`|The agent's confidence in the match.
    `_intent`|The intent the agent matched.
    `value`|The user's original text.
    `fulfillment.speech`|The agent's response, if you've provided the app with responses.
    `parameters.simplified`|The query submitted to the agent.
    `source`|The source agent.
language: yaml
tags: []
expanded: false
